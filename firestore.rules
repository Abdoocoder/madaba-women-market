
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user has a specific role
    function hasRole(role) {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == role;
    }

    // Users collection
    match /users/{userId} {
      // Allow users to read their own data
      allow read: if request.auth.uid == userId;
      // Allow users to create their own user document
      allow create: if request.auth.uid == userId;
      // Allow admins to read and write any user document
      allow read, write: if hasRole('admin');
    }

    // Products collection
    match /products/{productId} {
      // Allow anyone to read products
      allow read: if true;
      // Allow sellers to create products
      allow create: if hasRole('seller');
      // Allow sellers to update their own products, and admins to update any product
      allow update: if (hasRole('seller') && resource.data.sellerId == request.auth.uid) || hasRole('admin');
      // Allow sellers to delete their own products, and admins to delete any product
      allow delete: if (hasRole('seller') && resource.data.sellerId == request.auth.uid) || hasRole('admin');
    }

    // Carts collection
    match /carts/{userId} {
      // Allow users to read and write to their own cart
      allow read, write: if request.auth.uid == userId;
    }

    // Orders collection
    match /orders/{orderId} {
      // Allow users to read their own orders
      allow read: if request.auth.uid == get(/databases/$(database)/documents/orders/$(orderId)).data.userId;
      // Allow users to create orders
      allow create: if request.auth.uid == request.resource.data.userId;
      // Allow admins and sellers to read all orders
      allow read: if hasRole('admin') || hasRole('seller');
      // Allow admins to update orders
      allow update: if hasRole('admin');
    }
  }
}
