rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users - Allow public read for profiles, but only authenticated users can write to their own profile.
    match /users/{userId} {
      allow read;
      allow write: if request.auth != null && request.auth.uid == userId;
    }

    // Products - Allow public read for all products.
    // Write access is restricted to the product's seller or an admin.
    match /products/{productId} {
      allow read;
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.sellerId;
      allow update: if request.auth != null && 
        request.auth.uid == resource.data.sellerId;
      allow delete: if request.auth != null && 
        (request.auth.uid == resource.data.sellerId || 
         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
    }

    // Orders - users can access their own orders, sellers can access orders for their products
    match /orders/{orderId} {
      allow read, write: if request.auth != null && 
        (request.auth.uid == resource.data.customerId || 
         request.auth.uid == resource.data.sellerId ||
         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.customerId;
    }

    // Wishlists - users can only access their own wishlist
    match /wishlists/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // Addresses - users can only access their own addresses
    match /addresses/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // Categories - read only for all users, write for admins
    match /categories/{categoryId} {
      allow read;
      allow write: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Reviews - Allow public read for all reviews
    match /reviews/{reviewId} {
      allow read;
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.userId;
      allow update: if request.auth != null && 
        (request.auth.uid == resource.data.userId ||
         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
    }

    // Carts - users can only access their own cart
    match /carts/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
  }
}
